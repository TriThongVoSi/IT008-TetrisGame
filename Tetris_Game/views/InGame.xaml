<Window x:Class="Tetris_Game.InGame"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Tetris_Game"
        mc:Ignorable="d"
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        ResizeMode="NoResize"
        Title="InGame" Height="700" Width="650"
        WindowStartupLocation="CenterScreen">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
        </Grid.ColumnDefinitions>

        <Grid.Background>
            <ImageBrush ImageSource="../resources/assets/BackGroundInGame.png"/>
        </Grid.Background>

        <Image HorizontalAlignment="Center" 
               Height="600" 
               Margin="0,0,0,0" 
               VerticalAlignment="Center" 
               Width="500"
               Source="../resources/assets/InGame.png" 
               RenderTransformOrigin="0.5,0.5" Stretch="Fill">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-0.108"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>

        <Button x:Name="ButtonPlay"
                HorizontalAlignment="Center" 
                Margin="0,220,0,0" 
                VerticalAlignment="Top" 
                Height="100" 
                Width="200"
                BorderThickness="0"
                Focusable="False"
                Click="ButtonPlay_Default_Click" MouseEnter="ButtonPlay_Default_MouseEnter">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{x:Null}">
                    <!-- Default Background Image -->
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="../resources/button/ButtonPlay_Default.png"/>
                        </Setter.Value>
                    </Setter>
                    <!-- Remove BorderBrush to avoid default button outline -->
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <!-- Remove default WPF button effects -->
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <!-- Hover Effect -->
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="../resources/button/ButtonPlay_Hover.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="../resources/button/ButtonPlay_Clicked.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="ButtonRank"
                HorizontalAlignment="Center" 
                Margin="0,360,0,0" 
                VerticalAlignment="Top" 
                Height="100" 
                Width="200"
                BorderThickness="0" Click="ButtonRank_Default_Click" MouseEnter="ButtonRank_Default_MouseEnter">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{x:Null}">
                    <!-- Default Background Image -->
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="../resources/button/ButtonRank_Default.png"/>
                        </Setter.Value>
                    </Setter>
                    <!-- Remove BorderBrush to avoid default button outline -->
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <!-- Remove default WPF button effects -->
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <!-- Hover Effect -->
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="../resources/button/ButtonRank_Hover.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="../resources/button/ButtonRank_Clicked.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <Button x:Name="ButtonQuit"
                HorizontalAlignment="Center" 
                Margin="0,500,0,0" 
                VerticalAlignment="Top" 
                Height="100" 
                Width="200"
                BorderThickness="0" Click="ButtonQuit_Default_Click" MouseEnter="ButtonQuit_Default_MouseEnter">
            <Button.Style>
                <Style TargetType="Button" BasedOn="{x:Null}">
                    <!-- Default Background Image -->
                    <Setter Property="Background">
                        <Setter.Value>
                            <ImageBrush ImageSource="../resources/button/ButtonQuit_Default.png"/>
                        </Setter.Value>
                    </Setter>
                    <!-- Remove BorderBrush to avoid default button outline -->
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <!-- Remove default WPF button effects -->
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Button">
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <!-- Hover Effect -->
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="../resources/button/ButtonQuit_Hover.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <ImageBrush ImageSource="../resources/button/ButtonQuit_Clicked.png"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
        <Button x:Name="ButtonInstruction" 
            HorizontalAlignment="Left" 
            Margin="580,630,0,0" 
            VerticalAlignment="Top" 
            Height="60" 
            Width="60"
            BorderThickness="0" Click="ButtonInstruction_Click">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Grid>
                                    <Image x:Name="ButtonImage" Source="../resources/button/ButtonInstruction_Default.png" Stretch="Fill"/>
                                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Setter Property="RenderTransform">
                        <Setter.Value>
                            <ScaleTransform ScaleX="1" ScaleY="1"/>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Opacity" Value="1"/>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity" Value="0.8"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="1.05" ScaleY="1.05"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity" Value="0.6"/>
                            <Setter Property="RenderTransform">
                                <Setter.Value>
                                    <ScaleTransform ScaleX="0.9" ScaleY="0.9"/>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

    </Grid>
</Window>
